export interface TutorChatMessage {
  role: "user" | "assistant";
  content: string;
}

// AI Model Types
export type CerebrasModel =
  | "gpt-oss-120b"
  | "qwen-3-235b-a22b-thinking-2507";
export type GroqModel = "openai/gpt-oss-120b" | "moonshotai/kimi-k2-instruct";
export type GeminiModel =
  | "gemini-1.5-pro-latest"
  | "gemini-2.5-flash-latest"
  | "gemini-2.5-flash";

export type AIModel = CerebrasModel | GroqModel | GeminiModel;

// Base interface for text-only providers
export interface TextAIProvider {
  readonly providerName: string;
  generateJson<T>(prompt: string, model: AIModel): Promise<T>;
  generateText(prompt: string, model: AIModel): Promise<string>;
  generateChatCompletion(
    systemPrompt: string,
    messages: TutorChatMessage[],
    model: AIModel,
  ): Promise<string>;
}

// --- Preventive Health Plan Types ---

/**
 * The output of the deterministic guideline engine.
 * This is the "source of truth" passed to the AI for explanation generation.
 */
export interface GuidelinePlan {
  screenings: string[]; // e.g., ["COLORECTAL_CANCER_SCREENING"]
  lifestyle: string[]; // e.g., ["IMPROVE_DIET"]
  topicsForDoctor: string[]; // e.g., ["DISCUSS_SMOKING_CESSATION"]
  userAnswers: Record<string, string>;
}

/**
 * A recommended screening, part of the final user-facing plan generated by the AI.
 */
export interface RecommendedScreening {
  id: string; // The actionId from the config, e.g., "COLORECTAL_CANCER_SCREENING"
  title: string;
  description: string;
  why: string;
}

/**
 * A recommended lifestyle change, part of the final user-facing plan.
 */
export interface LifestyleGuideline {
  id: string;
  title: string;
  description: string;
}

/**
 * A recommended topic to discuss with a healthcare provider.
 */
export interface TopicForDoctor {
  id: string;
  title: string;
  why: string;
}

/**
 * The final, user-facing Action Plan, generated by the AI based on the GuidelinePlan.
 * This is the data structure the frontend will receive and render.
 */
export interface ActionPlan {
  overallSummary: string;
  recommendedScreenings: RecommendedScreening[];
  lifestyleGuidelines: LifestyleGuideline[];
  topicsForDoctor: TopicForDoctor[];
}
      